name: debug
description: runs application for debug
inputs:
  dbUsername:
    string:
      description: username to connect to the database
  dbPassword:
    string:
      description: password to connect to the database
  dbHost:
    string:
      description: database host
      default: mysqldb
  dbPort:
    string:
      description: database port
      default: '3306'
  dbSchema:
    string:
      description: name of the database to be created
      default: miniurl
  appDir:
    dir:
      default: .
run:
  serial:
    - op:
        ref: init
        inputs: { appDir }
    - op:
        ref: db/init
        inputs: { appDir }
    - parallel:
        - op:
            ref: 'github.com/opspec-pkgs/mysql.db.run#1.0.0'
            inputs: {
              dbUsername,
              dbPassword,
              dbSchema,
              dbDataRootDir: $(appDir/data),
              dbUseNativePassword: true
            }
        - serial:
          - op:
              ref: 'github.com/opspec-pkgs/mysql.db.waitready#1.0.0'
              inputs: {
                mysqlHost: $(dbHost),
                mysqlUsername: $(dbUsername),
                mysqlPassword: $(dbPassword),
                mysqlSchema: $(dbSchema)
              }
          - op:
              ref: db/migrate
              inputs: { appDir, dbHost, dbUsername, dbPassword, dbSchema }
          - container:
              image: { ref: 'node:10.15-alpine' }
              name: miniurl-svc
              envVars:
                dbUsername:
                dbPassword:
                dbHost:
                dbPort:
                dbSchema:
              dirs: { '/app': $(appDir) }
              cmd: ['npx', 'nodemon', '--inspect', 'app/app.js']
              workDir: '/app'
              ports: 
                '7777': '7777'
                '9229': '9229'

